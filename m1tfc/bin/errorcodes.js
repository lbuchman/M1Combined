'use strict';

const errorCodes = {
    TP025: { errorcode: '00000025', test: 'ICT', desc: 'value is out of tolerance' },
    TP33: { errorcode: '00000033', test: 'ICT', desc: 'value is out of tolerance' },
    TP35: { errorcode: '00000035', test: 'ICT', desc: 'value is out of tolerance' },
    TP34: { errorcode: '00000034', test: 'ICT', desc: 'value is out of tolerance' },
    TP36: { errorcode: '00000036', test: 'ICT', desc: 'value is out of tolerance' },
    'J5.13': { errorcode: '000J5.13', test: 'ICT', desc: 'value is out of tolerance' },
    'J5.8': { errorcode: '0000J5.8', test: 'ICT', desc: 'value is out of tolerance' },
    BatCellBat: { errorcode: '00000CBB', test: 'ICT', desc: 'value is out of tolerance' },
    TP031: { errorcode: '00000031', test: 'ICT', desc: 'value is out of tolerance' },
    'J5.18': { errorcode: '000J5.18', test: 'ICT', desc: 'continuity failed' },
    'J5.15': { errorcode: '000J5.15', test: 'ICT', desc: 'continuity failed' },
    'J5.17': { errorcode: '000J5.17', test: 'ICT', desc: 'continuity failed' },
    'J5.19': { errorcode: '000J5.19', test: 'ICT', desc: 'continuity failed' },
    'J5.16': { errorcode: '000J5.16', test: 'ICT', desc: 'continuity failed' },
    'J5.5': { errorcode: '0000J5.5', test: 'ICT', desc: 'value is out of tolerance' },
    'J5.7': { errorcode: '0000J5.7', test: 'ICT', desc: 'value is out of tolerance' },
    'J5.14': { errorcode: '000J5.14', test: 'ICT', desc: 'value is out of tolerance' },
    'J5.23': { errorcode: '000J5.23', test: 'ICT', desc: 'value is out of tolerance' },
    'J5.25': { errorcode: '000J5.25', test: 'ICT', desc: 'value is out of tolerance' },
    'J5.20': { errorcode: '000J5.20', test: 'ICT', desc: 'value is out of tolerance' },
    'J5.22': { errorcode: '000J5.22', test: 'ICT', desc: 'value is out of tolerance' },
    'J5.24': { errorcode: '000J5.24', test: 'ICT', desc: 'value is out of tolerance' },
    'J5.26': { errorcode: '000J5.26', test: 'ICT', desc: 'value is out of tolerance' },
    RS422: { errorcode: '000RS422', test: 'ICT', desc: 'echo test failed' },
    RS485: { errorcode: '000RS485', test: 'ICT', desc: 'echo test failed' },
    RedLed: { errorcode: '00RedLed', test: 'ICT', desc: 'value is out of tolerance' },
    BlueLed: { errorcode: '0BlueLed', test: 'ICT', desc: 'value is out of tolerance' },
    Tamper: { errorcode: '00Tamper', test: 'ICT', desc: 'continuity failed' },
    DDR3Bus: { errorcode: 'DDR3DBus', test: 'ICT', desc: 'continuity failed' },
    DDR3ABus: { errorcode: 'DDR3ABus', test: 'ICT', desc: 'continuity failed' },
    DDR3: { errorcode: '0000DDR3', test: 'ICT', desc: 'continuity failed' },
    EEPROM: { errorcode: '00EEPROM', test: 'ICT', desc: 'functional test' },
    BATOP: { errorcode: '00EBATOP', test: 'ICT', desc: 'power to battery switch' },
    BACHR: { errorcode: '00EBACHR', test: 'ICT', desc: 'battery module charging' },
    STM: { errorcode: '00000STM', test: 'ICT', desc: 'failed to program M1 STM, failed DFU' },
};

exports.codes = errorCodes;

