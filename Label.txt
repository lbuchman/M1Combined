
S2-CN-0167	Connector	HEADER TERM BLK 5.08MM 3POS RTA GRAY	TB508HDR03_RTA	Phoenix Contact	5433671
S2-CN-0168	Connector	PLUG TERM BLK 5.08MM 3POS 90DEG GRAY "D+ D- GND"	TB508PLG03_90DEG	Phoenix Contact	1710706


Example to set MAC address "12:34:56:78:9a:bc"
 ./STM32_Programmer_CLI -c port=usb1 -otp write lock word=9 value=0x12345678 llok for the order, uboot and prog seems different

1) Write OTP:

    fuse prog -y 0 57 0x78563412 0x0000bc9a
https://wiki.st.com/stm32mpu/wiki/STM32CubeProgrammer_OTP_management

https://u-boot.readthedocs.io/en/latest/board/st/stm32mp1.html


	git clone git://git.code.sf.net/p/dfu-util/dfu-util
	cd dfu-util

https://wiki.stmicroelectronics.cn/stm32mpu/wiki/STM32CubeProgrammer_flashlayout#Examples
https://wiki.stmicroelectronics.cn/stm32mpu/wiki/How_to_load_U-Boot_with_dfu-util
https://kinsta.com/blog/gmail-smtp-server/
    
Secret format:
Date, time, UID, secret, serial#

Serial # format:
XX   XX   XX    XXXX   XX
Board ID, Year, Week, Board S/N, Test Station ID

Test Modes:
o	Commission New Board
o	Retest Commissioned Board



https://www.intra2net.com/en/developer/libftdi/download.php




https://github.com/deanm1278/23LCV_driver/tree/master/test_app
https://stackoverflow.com/questions/26100105/read-and-write-to-spi-eeprom-on-linux

Currently EEPROM contains this data:

00000000  53 4e 3d 33 30 31 35 33  33 32 30 32 30 53 31 0a  |SN=3015332020S1.|
00000010  53 4b 3d 66 62 66 37 35  32 63 34 38 66 38 35 37  |SK=fbf752c48f857|
00000020  63 36 64 31 35 63 36 63  66 36 62 31 37 34 30 35  |c6d15c6cf6b17405|
00000030  65 35 39 0a 68 21 76 96  5b 45 2f 07 07 44 00 dc  |e59.h!v.[E/..D..|
00000040  6f 80 ad 26 ff ff ff ff  ff ff ff ff ff ff ff ff  |o..&............|
00000050  ff ff ff ff ff ff ff ff  ff ff ff ff ff ff ff ff  |................|

key=value pairs, with “\n” as a separator, followed by 16 bytes of md5 checksum

M1 stores its serial number (SN) and secret key (SK) in EEPROM – initialized during manufacturing testing.

Anna.


Required Additional Test Attributes:
•	Unique LED pattern for pass/fail
•	Interface to display test results
•	Method to harvest diagnostic logs
•	Configuration to stop test on failure or keep going
•	Generate UID (MAC address of processor on M1-3200)
•	Generate S/N 
•	Secret Registration – interface with cumulus
•	Ability to reprogram eMMC if needed
•	Log test results by S/N and UID
•	Print label
•	Ability to reprint label
•	Do Not overwrite eeprom if S/N and UID is present
•	Do Not write eeprom unless all other tests pass 
•	Label contents:
o	Passing Board: Product Type, UID, serial #, MAC address
o	Failing Board: Test that failed
